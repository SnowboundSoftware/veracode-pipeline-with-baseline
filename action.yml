name: 'Veracode Pipeline Scan with Baseline'
description: 'Perform a Veracode Pipeline Scan, comparing the results against the provided baseline file'
branding:
  icon: 'fast-forward'
  color: 'blue'
inputs:
  vid:
    description: 'Veracode API ID'
    required: true
  vkey:
    description: 'Veracode API Secret Key'
    required: true
  filename:
    description: 'Filepath of the file to scan'
    required: true
  results:
    description: 'Filename of the where to save JSON results'
    default: 'results.json'
    required: false
  baseline:
    description: 'Filename of the baseline results JSON file'
    default: 'baseline.json'
    required: false
  timeout:
    description: 'The number of minutes to wait before failing the job'
    default: '60'
    required: false
  severity:
    description: 'The severities that will fail this run'
    default: 'Very High, High'
    required: false
  cwe:
    description: 'The CWEs that will fail this run. Default (empty) is all CWEs'
    default: ''
    required: false
  appid:
    description: 'The Veracode Platform application ID for reporting purposes'
    default: ''
    required: false
  allowfail:
    description: 'Set to false to prevent the scan results from ever failing the job'
    default: 'true'
    required: false
  annotate:
    description: 'Set to false to prevent GitHub Actions annotations'
    default: 'true'
    required: false
runs:
  using: 'composite'
  steps:
    - run: unzip -o ${{ github.action_path }}/pipeline-scan-LATEST.zip
      shell: bash
    - run: cp ${{ github.action_path }}/veracodeJsonToMd.jar .
      shell: bash
    - run: cp ${{ github.action_path }}/veracodeJsonToGhAnnotations.sh .
      shell: bash
    - run: ${{ github.action_path }}/scripts/run_scan.sh
      name: 'Run Veracode pipeline scan'
      shell: bash
      env:
        INPUT_VID: ${{ inputs.vid }}
        INPUT_VKEY: ${{ inputs.vkey }}
        INPUT_FILENAME: ${{ inputs.filename }}
        INPUT_RESULTS: ${{ inputs.results }}
        INPUT_BASELINE: ${{ inputs.baseline }}
        INPUT_TIMEOUT: ${{ inputs.timeout }}
        INPUT_SEVERITY: ${{ inputs.severity }}
        INPUT_CWE: ${{ inputs.cwe }}
        INPUT_APPID: ${{ inputs.appid }}
        INPUT_ALLOWFAIL: ${{ inputs.allowfail }}
    - run: ./veracodeJsonToGhAnnotations.sh
      if: inputs.annotate == true
      name: 'Annotate GitHub Actions'
      shell: bash
    - run: java -jar veracodeJsonToMd.jar -i results.json -o results.md
      name: 'Convert Veracode JSON to MD'
      shell: bash